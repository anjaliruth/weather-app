{"ast":null,"code":"var _jsxFileName = \"/Users/anjaliruth/Desktop/SOC Projects/GithubProjects/WeatherAppv2/myapp/src/components/MainWeatherWindow/index.js\",\n  _s = $RefreshSig$();\nimport SearchBar from \"../SearchBar\";\nimport WeatherBox from \"../WeatherBox\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainWeatherWindow() {\n  _s();\n  //create a state variable for the city that users will input\n  //Lifted state from the SearchBar component because the city is needed in the WeatherBox component\n\n  const [todayData, setTodayData] = useState(\"\");\n  //forecast for tomorrow\n  const [day1Data, setDay1Data] = useState(\"\");\n  //forecast for the day after tomorrow\n  const [day2Data, setDay2Data] = useState(\"\");\n  //forecast for the day after the day after tomorrow\n  const [day3Data, setDay3Data] = useState(\"\");\n  //separate state just for the city because the city is at the top of the API response, and not inthe nested Data onject\n  const [location, setLocation] = useState(\"London\");\n  //do the API call here\n  //call the API\n  //API is called in the useEffect hook\n  //city is a dependency of the useEffect hook\n  //the useEffect hook will be called when the city changes\n  //need to get the city from the search bar\n  //the search bar will be a child component of the MainWeatherWindow\n  //city here is a variable, not the state. I have passed the state into the handleSearchClick function in the SearchBar component, which now becomes a parameter when its called in the function handleSearchClick on line 21.\n  useEffect(() => {\n    async function getWeather() {\n      const response = await fetch(`https://api.weatherbit.io/v2.0/forecast/daily?&city=${location}&key=44cbebc5694040768e4b8c4982357e37`);\n      const data = await response.json();\n      setLocation(data.city_name);\n      setTodayData(data.data[0]);\n      setDay1Data(data.data[1]);\n      setDay2Data(data.data[2]);\n      setDay3Data(data.data[3]);\n      console.log(data);\n    }\n    getWeather();\n  }, [location]);\n\n  // //all the actions i want to run while i am fetching data\n  // function handleSearchClick(location) {\n  //   // Call the getWeather function with the current city state value\n  //   getWeather(location);\n  // }\n  function handleSearchClick(location) {\n    setLocation(location);\n  }\n  // Create a new Date object from the datetime string\n  let date = new Date(todayData.datetime);\n  // Get the name of the day using the toLocaleDateString method\n  let day = date.toLocaleDateString(\"default\", {\n    weekday: \"long\"\n  });\n\n  //the city will be a state variable (useState hook)\n  console.log(todayData);\n  function getWeatherEmoji(description) {\n    switch (description) {\n      case 'Clear sky':\n        return '☀️';\n      case 'Few clouds':\n        return '🌤️';\n      case 'Scattered clouds':\n        return '🌥️';\n      case 'Broken clouds':\n        return '🌥️';\n      case 'Overcast clouds':\n        return '☁️';\n      case 'Light rain':\n        return '🌧️';\n      case 'Moderate rain':\n        return '🌧️';\n      case 'Heavy rain':\n        return '⛈️';\n      case 'Freezing rain':\n        return '❄️🌧️';\n      case 'Light shower rain':\n        return '🌧️';\n      case 'Shower rain':\n        return '🌧️';\n      case 'Heavy shower rain':\n        return '⛈️';\n      case 'Light snow':\n        return '❄️';\n      case 'Snow':\n        return '❄️';\n      case 'Heavy snow':\n        return '❄️🌨️';\n      case 'Sleet':\n        return '❄️🌧️';\n      case 'Light shower sleet':\n        return '❄️🌧️';\n      case 'Shower sleet':\n        return '❄️🌧️';\n      case 'Light rain and snow':\n        return '❄️🌧️';\n      case 'Rain and snow':\n        return '❄️🌧️';\n      case 'Light shower snow':\n        return '❄️🌨️';\n      case 'Shower snow':\n        return '❄️🌨️';\n      case 'Heavy shower snow':\n        return '❄️🌨️';\n      case 'Mist':\n        return '🌫️';\n      case 'Smoke':\n        return '🌫️';\n      case 'Haze':\n        return '🌫️';\n      case 'Sand/dust':\n        return '🌫️';\n      case 'Fog':\n        return '🌫️';\n      case 'Freezing fog':\n        return '❄️🌫️';\n      case 'Patches of fog':\n        return '🌫️';\n      case 'Patches of smoke':\n        return '🌫️';\n      case 'Patches of haze':\n        return '🌫️';\n      case 'Patches of sand/dust':\n        return '🌫️';\n      case 'Drizzle':\n        return '🌧️';\n      case 'Freezing drizzle':\n        return '❄️🌧️';\n      case 'Light intensity drizzle':\n        return '🌧️';\n      case 'Shower drizzle':\n        return '🌧️';\n      case 'Heavy intensity drizzle':\n        return '🌧️';\n      default:\n        return '❓';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      handleSearchClick: handleSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: todayData && location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: todayData && day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: todayData && `${todayData.temp.toFixed(0)}ºC`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecastTogether\",\n        children: [/*#__PURE__*/_jsxDEV(WeatherBox, {\n          dayxData: day1Data,\n          getEmoji: getWeatherEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBox, {\n          dayxData: day2Data,\n          getEmoji: getWeatherEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBox, {\n          dayxData: day3Data,\n          getEmoji: getWeatherEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(MainWeatherWindow, \"OMBH/zpEsBa42koEJtfBzXjIHew=\");\n_c = MainWeatherWindow;\nvar _c;\n$RefreshReg$(_c, \"MainWeatherWindow\");","map":{"version":3,"names":["SearchBar","WeatherBox","useState","useEffect","jsxDEV","_jsxDEV","MainWeatherWindow","_s","todayData","setTodayData","day1Data","setDay1Data","day2Data","setDay2Data","day3Data","setDay3Data","location","setLocation","getWeather","response","fetch","data","json","city_name","console","log","handleSearchClick","date","Date","datetime","day","toLocaleDateString","weekday","getWeatherEmoji","description","children","fileName","_jsxFileName","lineNumber","columnNumber","className","temp","toFixed","dayxData","getEmoji","_c","$RefreshReg$"],"sources":["/Users/anjaliruth/Desktop/SOC Projects/GithubProjects/WeatherAppv2/myapp/src/components/MainWeatherWindow/index.js"],"sourcesContent":["import SearchBar from \"../SearchBar\";\nimport WeatherBox from \"../WeatherBox\";\nimport { useState,useEffect } from \"react\";\nexport default function MainWeatherWindow() {\n  //create a state variable for the city that users will input\n  //Lifted state from the SearchBar component because the city is needed in the WeatherBox component\n\n  const [todayData, setTodayData] = useState(\"\");\n  //forecast for tomorrow\n  const [day1Data, setDay1Data] = useState(\"\");\n  //forecast for the day after tomorrow\n  const [day2Data, setDay2Data] = useState(\"\");\n  //forecast for the day after the day after tomorrow\n  const [day3Data, setDay3Data] = useState(\"\");\n  //separate state just for the city because the city is at the top of the API response, and not inthe nested Data onject\n  const [location, setLocation] = useState(\"London\");\n  //do the API call here\n  //call the API\n  //API is called in the useEffect hook\n  //city is a dependency of the useEffect hook\n  //the useEffect hook will be called when the city changes\n  //need to get the city from the search bar\n  //the search bar will be a child component of the MainWeatherWindow\n  //city here is a variable, not the state. I have passed the state into the handleSearchClick function in the SearchBar component, which now becomes a parameter when its called in the function handleSearchClick on line 21.\n  useEffect(() => {\n    async function getWeather() {\n      const response = await fetch(\n        `https://api.weatherbit.io/v2.0/forecast/daily?&city=${location}&key=44cbebc5694040768e4b8c4982357e37`\n      );\n      const data = await response.json();\n      setLocation(data.city_name);\n      setTodayData(data.data[0]);\n      setDay1Data(data.data[1]);\n      setDay2Data(data.data[2]);\n      setDay3Data(data.data[3]);\n      console.log(data);\n    }\n    getWeather();\n  }, [location]);\n\n  // //all the actions i want to run while i am fetching data\n  // function handleSearchClick(location) {\n  //   // Call the getWeather function with the current city state value\n  //   getWeather(location);\n  // }\n  function handleSearchClick(location) {\n    setLocation(location);\n  }\n  // Create a new Date object from the datetime string\n  let date = new Date(todayData.datetime);\n  // Get the name of the day using the toLocaleDateString method\n  let day = date.toLocaleDateString(\"default\", { weekday: \"long\" });\n\n  //the city will be a state variable (useState hook)\n  console.log(todayData);\n\n  function getWeatherEmoji(description) {\n    switch (description) {\n      case 'Clear sky':\n        return '☀️';\n      case 'Few clouds':\n        return '🌤️';\n      case 'Scattered clouds':\n        return '🌥️';\n      case 'Broken clouds':\n        return '🌥️';\n      case 'Overcast clouds':\n        return '☁️';\n      case 'Light rain':\n        return '🌧️';\n      case 'Moderate rain':\n        return '🌧️';\n      case 'Heavy rain':\n        return '⛈️';\n      case 'Freezing rain':\n        return '❄️🌧️';\n      case 'Light shower rain':\n        return '🌧️';\n      case 'Shower rain':\n        return '🌧️';\n      case 'Heavy shower rain':\n        return '⛈️';\n      case 'Light snow':\n        return '❄️';\n      case 'Snow':\n        return '❄️';\n      case 'Heavy snow':\n        return '❄️🌨️';\n      case 'Sleet':\n        return '❄️🌧️';\n      case 'Light shower sleet':\n        return '❄️🌧️';\n      case 'Shower sleet':\n        return '❄️🌧️';\n      case 'Light rain and snow':\n        return '❄️🌧️';\n      case 'Rain and snow':\n        return '❄️🌧️';\n      case 'Light shower snow':\n        return '❄️🌨️';\n      case 'Shower snow':\n        return '❄️🌨️';\n      case 'Heavy shower snow':\n        return '❄️🌨️';\n      case 'Mist':\n        return '🌫️';\n      case 'Smoke':\n        return '🌫️';\n      case 'Haze':\n        return '🌫️';\n      case 'Sand/dust':\n        return '🌫️';\n      case 'Fog':\n        return '🌫️';\n      case 'Freezing fog':\n        return '❄️🌫️';\n      case 'Patches of fog':\n        return '🌫️';\n      case 'Patches of smoke':\n        return '🌫️';\n      case 'Patches of haze':\n        return '🌫️';\n      case 'Patches of sand/dust':\n        return '🌫️';\n      case 'Drizzle':\n        return '🌧️';\n      case 'Freezing drizzle':\n        return '❄️🌧️';\n      case 'Light intensity drizzle':\n        return '🌧️';\n      case 'Shower drizzle':\n        return '🌧️';\n      case 'Heavy intensity drizzle':\n        return '🌧️';\n      default:\n        return '❓';\n    }\n  }\n  \n\n  return (\n    <div>\n    <SearchBar handleSearchClick={handleSearchClick} />\n    <div className = \"display\">\n      <div className = \"today\">\n      <h1>{todayData && location}</h1>\n      <h1>{todayData && day}</h1>\n      \n      \n      <h1>{todayData && `${todayData.temp.toFixed(0)}ºC`}\n      </h1>\n      </div>\n      <div className = \"forecastTogether\">\n        <WeatherBox dayxData={day1Data} getEmoji={getWeatherEmoji}/>\n        <WeatherBox dayxData={day2Data} getEmoji={getWeatherEmoji} />\n        <WeatherBox dayxData={day3Data} getEmoji={getWeatherEmoji}/>\n      </div>\n    </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}