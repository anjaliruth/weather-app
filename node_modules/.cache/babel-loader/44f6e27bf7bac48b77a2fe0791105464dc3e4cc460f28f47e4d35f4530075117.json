{"ast":null,"code":"var _jsxFileName = \"/Users/anjaliruth/Desktop/SOC Projects/GithubProjects/WeatherAppv2/myapp/src/components/MainWeatherWindow/index.js\",\n  _s = $RefreshSig$();\nimport SearchBar from \"../SearchBar\";\nimport WeatherBox from \"../WeatherBox\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainWeatherWindow() {\n  _s();\n  //create a state variable for the city that users will input\n  //Lifted state from the SearchBar component because the city is needed in the WeatherBox component\n\n  const [todayData, setTodayData] = useState(\"\");\n  //forecast for tomorrow\n  const [day1Data, setDay1Data] = useState(\"\");\n  //forecast for the day after tomorrow\n  const [day2Data, setDay2Data] = useState(\"\");\n  //forecast for the day after the day after tomorrow\n  const [day3Data, setDay3Data] = useState(\"\");\n  //separate state just for the city because the city is at the top of the API response, and not inthe nested Data onject\n  const [location, setLocation] = useState(\"\");\n  //do the API call here\n  //call the aPI\n  //API is called in the useEffect hook\n  //city is a dependency of the useEffect hook\n  //the useEffect hook will be called when the city changes\n  //need to get the city from the search bar\n  //the search bar will be a child component of the MainWeatherWindow\n  //city here is a variable, not the state. I have passed the state into the handleSearchClick function in the SearchBar component, which now becomes a parameter when its called in the function handleSearchClick on line 21.\n  useEffect(() => {\n    async function getWeather() {\n      const response = await fetch(`https://api.weatherbit.io/v2.0/forecast/daily?&city=${location}&key=44cbebc5694040768e4b8c4982357e37`);\n      const data = await response.json();\n      setLocation(data.city_name);\n      setTodayData(data.data[0]);\n      setDay1Data(data.data[1]);\n      setDay2Data(data.data[2]);\n      setDay3Data(data.data[3]);\n      console.log(data);\n    }\n    getWeather();\n  }, [location]);\n\n  //all the actions i want to run while i am fetching data\n  function handleSearchClick(location) {\n    // Call the getWeather function with the current city state value\n    getWeather(location);\n  }\n\n  // Create a new Date object from the datetime string\n  let date = new Date(todayData.datetime);\n  // Get the name of the day using the toLocaleDateString method\n  let day = date.toLocaleDateString(\"default\", {\n    weekday: \"long\"\n  });\n\n  //the city will be a state variable (useState hook)\n  console.log(todayData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      handleSearchClick: handleSearchClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todayData && location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todayData && day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todayData && `${todayData.temp}ºC`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todayData && todayData.weather.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecastTogether\",\n      children: [/*#__PURE__*/_jsxDEV(WeatherBox, {\n        dayxData: day1Data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherBox, {\n        dayxData: day2Data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherBox, {\n        dayxData: day3Data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(MainWeatherWindow, \"hBuEAzjOTtDQl42QdIsVFaiZQuA=\");\n_c = MainWeatherWindow;\nvar _c;\n$RefreshReg$(_c, \"MainWeatherWindow\");","map":{"version":3,"names":["SearchBar","WeatherBox","useState","jsxDEV","_jsxDEV","MainWeatherWindow","_s","todayData","setTodayData","day1Data","setDay1Data","day2Data","setDay2Data","day3Data","setDay3Data","location","setLocation","useEffect","getWeather","response","fetch","data","json","city_name","console","log","handleSearchClick","date","Date","datetime","day","toLocaleDateString","weekday","children","fileName","_jsxFileName","lineNumber","columnNumber","temp","weather","description","className","dayxData","_c","$RefreshReg$"],"sources":["/Users/anjaliruth/Desktop/SOC Projects/GithubProjects/WeatherAppv2/myapp/src/components/MainWeatherWindow/index.js"],"sourcesContent":["import SearchBar from \"../SearchBar\";\nimport WeatherBox from \"../WeatherBox\";\nimport { useState } from \"react\";\nexport default function MainWeatherWindow() {\n  //create a state variable for the city that users will input\n  //Lifted state from the SearchBar component because the city is needed in the WeatherBox component\n\n  const [todayData, setTodayData] = useState(\"\");\n  //forecast for tomorrow\n  const [day1Data, setDay1Data] = useState(\"\");\n  //forecast for the day after tomorrow\n  const [day2Data, setDay2Data] = useState(\"\");\n  //forecast for the day after the day after tomorrow\n  const [day3Data, setDay3Data] = useState(\"\");\n  //separate state just for the city because the city is at the top of the API response, and not inthe nested Data onject\n  const [location, setLocation] = useState(\"\");\n  //do the API call here\n  //call the aPI\n  //API is called in the useEffect hook\n  //city is a dependency of the useEffect hook\n  //the useEffect hook will be called when the city changes\n  //need to get the city from the search bar\n  //the search bar will be a child component of the MainWeatherWindow\n  //city here is a variable, not the state. I have passed the state into the handleSearchClick function in the SearchBar component, which now becomes a parameter when its called in the function handleSearchClick on line 21.\n  useEffect(() => {\n    async function getWeather() {\n      const response = await fetch(\n        `https://api.weatherbit.io/v2.0/forecast/daily?&city=${location}&key=44cbebc5694040768e4b8c4982357e37`\n      );\n      const data = await response.json();\n      setLocation(data.city_name);\n      setTodayData(data.data[0]);\n      setDay1Data(data.data[1]);\n      setDay2Data(data.data[2]);\n      setDay3Data(data.data[3]);\n      console.log(data);\n    }\n    getWeather();\n  }, [location]);\n\n  //all the actions i want to run while i am fetching data\n  function handleSearchClick(location) {\n    // Call the getWeather function with the current city state value\n    getWeather(location);\n  }\n\n  // Create a new Date object from the datetime string\n  let date = new Date(todayData.datetime);\n  // Get the name of the day using the toLocaleDateString method\n  let day = date.toLocaleDateString(\"default\", { weekday: \"long\" });\n\n  //the city will be a state variable (useState hook)\n  console.log(todayData);\n\n  return (\n    <div>\n      <SearchBar handleSearchClick={handleSearchClick} />\n      <h1>{todayData && location}</h1>\n      <h1>{todayData && day}</h1>\n      <h1>{todayData && `${todayData.temp}ºC`}</h1>\n      <h1>{todayData && todayData.weather.description}</h1>\n      <div className = \"forecastTogether\">\n        <WeatherBox dayxData={day1Data} />\n        <WeatherBox dayxData={day2Data} />\n        <WeatherBox dayxData={day3Data} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}