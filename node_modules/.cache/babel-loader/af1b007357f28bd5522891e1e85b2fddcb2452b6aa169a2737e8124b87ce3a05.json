{"ast":null,"code":"var _jsxFileName = \"/Users/anjaliruth/Desktop/SOC Projects/GithubProjects/WeatherAppv2/myapp/src/components/MainWeatherWindow/index.js\",\n  _s = $RefreshSig$();\nimport SearchBar from \"../SearchBar\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainWeatherWindow() {\n  _s();\n  const [todayData, setTodayData] = useState(\"\");\n  //do the API call here\n  //call the aPI\n  //API is called in the useEffect hook\n  //city is a dependency of the useEffect hook\n  //the useEffect hook will be called when the city changes\n  //need to get the city from the search bar\n  //the search bar will be a child component of the MainWeatherWindow\n  async function getWeather(city) {\n    const response = await fetch(`https://api.weatherbit.io/v2.0/forecast/daily?&city=${city}&key=44cbebc5694040768e4b8c4982357e37`);\n    const data = await response.json();\n    setTodayData(data.data[0]);\n  }\n  function handleSearchClick(city) {\n    // Call the getWeather function with the current city state value\n    getWeather(city);\n  }\n\n  //the city will be a state variable (useState hook)\n  console.log(todayData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      margin: '0 auto',\n      maxWidth: '300px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      handleSearchClick: () => {\n        handleSearchClick(city);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todayData && todayData.ob_time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todayData && todayData.city_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todayData && `${todayData.temp}ºC`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(MainWeatherWindow, \"jkHNJe7pEP/2SK5IAanIt71S26s=\");\n_c = MainWeatherWindow;\nvar _c;\n$RefreshReg$(_c, \"MainWeatherWindow\");","map":{"version":3,"names":["SearchBar","useState","jsxDEV","_jsxDEV","MainWeatherWindow","_s","todayData","setTodayData","getWeather","city","response","fetch","data","json","handleSearchClick","console","log","style","textAlign","margin","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","ob_time","city_name","temp","_c","$RefreshReg$"],"sources":["/Users/anjaliruth/Desktop/SOC Projects/GithubProjects/WeatherAppv2/myapp/src/components/MainWeatherWindow/index.js"],"sourcesContent":["import SearchBar from \"../SearchBar\"\nimport {useState } from \"react\"\nexport default function MainWeatherWindow() {\n   \n    const [todayData, setTodayData] = useState(\"\");\n    //do the API call here\n    //call the aPI\n    //API is called in the useEffect hook\n    //city is a dependency of the useEffect hook\n    //the useEffect hook will be called when the city changes\n    //need to get the city from the search bar\n    //the search bar will be a child component of the MainWeatherWindow\n    async function getWeather(city) {\n        const response = await fetch(`https://api.weatherbit.io/v2.0/forecast/daily?&city=${city}&key=44cbebc5694040768e4b8c4982357e37`)\n        const data = await response.json();\n        setTodayData(data.data[0]);\n    }\n\n    function handleSearchClick(city) {\n        // Call the getWeather function with the current city state value\n        getWeather(city);\n    }\n\n  \n    //the city will be a state variable (useState hook)\n    console.log(todayData);\n\n    return (\n        <div style={{ textAlign: 'center', margin: '0 auto', maxWidth: '300px' }}>\n            <SearchBar handleSearchClick={() => {handleSearchClick(city)}}/>\n            <h1>{todayData && todayData.ob_time}</h1>\n            <h1>{todayData && todayData.city_name}</h1>\n            <h1>{todayData && `${todayData.temp}ºC`}</h1>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,SAAQC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/B,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAExC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eAAeO,UAAUA,CAACC,IAAI,EAAE;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDF,IAAK,uCAAsC,CAAC;IAChI,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCN,YAAY,CAACK,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC;EAC9B;EAEA,SAASE,iBAAiBA,CAACL,IAAI,EAAE;IAC7B;IACAD,UAAU,CAACC,IAAI,CAAC;EACpB;;EAGA;EACAM,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC;EAEtB,oBACIH,OAAA;IAAKc,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,MAAM,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACrElB,OAAA,CAACH,SAAS;MAACc,iBAAiB,EAAEA,CAAA,KAAM;QAACA,iBAAiB,CAACL,IAAI,CAAC;MAAA;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAChEtB,OAAA;MAAAkB,QAAA,EAAKf,SAAS,IAAIA,SAAS,CAACoB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzCtB,OAAA;MAAAkB,QAAA,EAAKf,SAAS,IAAIA,SAAS,CAACqB;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC3CtB,OAAA;MAAAkB,QAAA,EAAKf,SAAS,IAAK,GAAEA,SAAS,CAACsB,IAAK;IAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3C;AAEd;AAACpB,EAAA,CAjCuBD,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}